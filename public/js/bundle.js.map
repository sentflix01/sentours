{"mappings":"AEEM,MAAA,EAFN,MAAA,EAAA,KAGE,GAAI,CACF,IAAM,EAAM,MAAM,MAAM,CACtB,OAAQ,OACR,IAAK,2CACL,KAAM,CACJ,MAAA,EACA,SAAA,CACF,CACF,EAEwB,CAAA,YAApB,EAAI,IAAI,CAAC,MAAM,GACjB,MAAM,2BACN,OAAO,UAAU,CAAC,KAChB,SAAS,MAAM,CAAC,IAClB,EAAG,OAGL,QAAQ,GAAG,CAAC,EACd,CAAE,MAAO,EAAK,CACZ,MAAM,EAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CACjC,CACF,EAEA,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,SAAU,AAAC,IAC1D,EAAE,cAAc,GAGhB,EAFc,SAAS,cAAc,CAAC,SAAS,KAAK,CACnC,SAAS,cAAc,CAAC,YAAY,KAAK,CAE5D,GC5BA,MAAM,EAAS,SAAS,cAAc,CAAC,OACvC,GAAI,EAAQ,CACV,IAAM,EAAY,KAAK,KAAK,CAAC,EAAO,OAAO,CAAC,SAAS,EAE/C,EAAM,EAAE,GAAG,CAAC,MAAO,CACvB,gBAAiB,CAAA,EACjB,YAAa,CAAA,CACf,GAGA,EAAE,SAAS,CAAC,qDAAsD,CAChE,YAAa,mCACf,GAAG,KAAK,CAAC,GAGT,IAAM,EAAS,EAAE,YAAY,GAG7B,EAAU,OAAO,CAAC,AAAC,IACjB,GAAM,CAAC,EAAK,EAAI,CAAG,EAAI,WAAW,CAGlC,EAAE,MAAM,CAAC,CAAC,EAAK,EAAI,EAChB,KAAK,CAAC,GACN,SAAS,CAAC,CAAC,OAAO,EAAE,EAAI,GAAG,CAAC,EAAE,EAAE,EAAI,WAAW,CAAC,IAAI,CAAC,CAAE,CACtD,UAAW,CAAA,EACX,aAAc,CAAA,CAChB,GACC,SAAS,GAGZ,EAAO,MAAM,CAAC,CAAC,EAAK,EAAI,CAC1B,GAGA,EAAI,SAAS,CAAC,EAAQ,CACpB,QAAS,CAAC,IAAK,IAAI,AACrB,EACF","sources":["<anon>","public/js/index.js","public/js/login.js","public/js/leafletMap.js"],"sourcesContent":["var $0cb5274ecd6fd268$exports = {};\n/* eslint-disable */ /* eslint-disable */ const $94e9b38cb540dc75$var$login = async (email, password)=>{\n    try {\n        const res = await axios({\n            method: 'POST',\n            url: 'http://127.0.0.1:3000/api/v1/users/login',\n            data: {\n                email: email,\n                password: password\n            }\n        });\n        if (res.data.status === 'success') {\n            alert('Logged in successfully!');\n            window.setTimeout(()=>{\n                location.assign('/');\n            }, 1500);\n        }\n        console.log(res);\n    } catch (err) {\n        alert(err.response.data.message);\n    }\n};\ndocument.querySelector('.form').addEventListener('submit', (e)=>{\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    $94e9b38cb540dc75$var$login(email, password);\n});\n\n\n/* eslint-disable */ // Parse locations from the map container\nconst $708381ad349fea92$var$mapBox = document.getElementById('map');\nif ($708381ad349fea92$var$mapBox) {\n    const locations = JSON.parse($708381ad349fea92$var$mapBox.dataset.locations);\n    const map = L.map('map', {\n        scrollWheelZoom: false,\n        zoomControl: true\n    });\n    // Add OpenStreetMap tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n    }).addTo(map);\n    // Create bounds to fit all locations\n    const bounds = L.latLngBounds();\n    // Add markers and popups\n    locations.forEach((loc)=>{\n        const [lng, lat] = loc.coordinates;\n        // Marker with popup\n        L.marker([\n            lat,\n            lng\n        ]).addTo(map).bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\n            autoClose: false,\n            closeOnClick: false\n        }).openPopup();\n        // Extend bounds\n        bounds.extend([\n            lat,\n            lng\n        ]);\n    });\n    // Fit map to bounds\n    map.fitBounds(bounds, {\n        padding: [\n            150,\n            100\n        ]\n    });\n}\n\n\n\n\n//# sourceMappingURL=bundle.js.map\n","/* eslint-disable */\n\nimport './login.js';\nimport './leafletMap.js';","/* eslint-disable */\n\nconst login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: 'http://127.0.0.1:3000/api/v1/users/login',\n      data: {\n        email,\n        password,\n      },\n    });\n\n    if (res.data.status === 'success') {\n      alert('Logged in successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n\n    console.log(res);\n  } catch (err) {\n    alert(err.response.data.message);\n  }\n};\n\ndocument.querySelector('.form').addEventListener('submit', (e) => {\n  e.preventDefault();\n  const email = document.getElementById('email').value;\n  const password = document.getElementById('password').value;\n  login(email, password);\n});\n","/* eslint-disable */\n\n// Parse locations from the map container\nconst mapBox = document.getElementById('map');\nif (mapBox) {\n  const locations = JSON.parse(mapBox.dataset.locations);\n\n  const map = L.map('map', {\n    scrollWheelZoom: false,\n    zoomControl: true,\n  });\n\n  // Add OpenStreetMap tile layer\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; OpenStreetMap contributors',\n  }).addTo(map);\n\n  // Create bounds to fit all locations\n  const bounds = L.latLngBounds();\n\n  // Add markers and popups\n  locations.forEach((loc) => {\n    const [lng, lat] = loc.coordinates;\n\n    // Marker with popup\n    L.marker([lat, lng])\n      .addTo(map)\n      .bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\n        autoClose: false,\n        closeOnClick: false,\n      })\n      .openPopup();\n\n    // Extend bounds\n    bounds.extend([lat, lng]);\n  });\n\n  // Fit map to bounds\n  map.fitBounds(bounds, {\n    padding: [150, 100],\n  });\n}\n"],"names":["$94e9b38cb540dc75$var$login","email","password","res","axios","method","url","data","status","alert","window","setTimeout","location","assign","console","log","err","response","message","document","querySelector","addEventListener","e","preventDefault","getElementById","value","$708381ad349fea92$var$mapBox","locations","JSON","parse","dataset","map","L","scrollWheelZoom","zoomControl","tileLayer","attribution","addTo","bounds","latLngBounds","forEach","loc","lng","lat","coordinates","marker","bindPopup","day","description","autoClose","closeOnClick","openPopup","extend","fitBounds","padding"],"version":3,"file":"bundle.js.map","sourceRoot":"../../"}